{
  "openapi": "3.1.0",
  "info": {
    "title": "omi ai apis",
    "description": "Retrieves the omi's conversations, the omi's memories of users",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://518f-113-173-36-66.ngrok-free.app"
    }
  ],
  "paths": {
    "/v2/integrations/01JQ6AHB37GWRZV66FC6EPTNY5/conversations": {
      "get": {
        "tags": [
          "integration",
          "conversations"
        ],
        "summary": "Get Conversations Via Integration",
        "description": "Get all conversations for a user via integration API.\nAuthentication is required via API key in the Authorization header.",
        "operationId": "GetUserConversations",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            },
            "description": "ID of the app requesting conversations"
          },
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Uid"
            },
            "description": "User ID whose conversations are being requested"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of conversations to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of conversations to skip"
          },
          {
            "name": "include_discarded",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Discarded"
            },
            "description": "Whether to include discarded conversations"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "title": "Statuses"
            },
            "description": "Filter conversations by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key"
          },
          "403": {
            "description": "Forbidden - App not enabled for user or lacks required capability"
          },
          "404": {
            "description": "Not Found - App not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/integrations/01JQ6AHB37GWRZV66FC6EPTNY5/memories": {
      "get": {
        "tags": [
          "integration",
          "facts"
        ],
        "summary": "Get Memories Via Integration",
        "description": "Get all memories (facts) for a user via integration API.\nAuthentication is required via API key in the Authorization header.",
        "operationId": "GetUserMemories",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            },
            "description": "ID of the app requesting memories"
          },
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Uid"
            },
            "description": "User ID whose memories are being requested"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of memories to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of memories to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key"
          },
          "403": {
            "description": "Forbidden - App not enabled for user or lacks required capability"
          },
          "404": {
            "description": "Not Found - App not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConversationsResponse": {
        "type": "object",
        "required": [
          "conversations"
        ],
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationItem"
            },
            "description": "List of user conversations"
          }
        },
        "title": "ConversationsResponse"
      },
      "ConversationItem": {
        "type": "object",
        "required": [
          "id",
          "created_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the conversation"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When the conversation was created"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Started At",
            "description": "When the conversation started"
          },
          "finished_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Finished At",
            "description": "When the conversation finished"
          },
          "structured": {
            "type": "object",
            "nullable": true,
            "title": "Structured",
            "description": "Structured data about the conversation"
          },
          "transcript_segments": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true,
            "title": "Transcript Segments",
            "description": "Transcript segments of the conversation"
          },
          "visibility": {
            "type": "string",
            "nullable": true,
            "title": "Visibility",
            "description": "Visibility setting of the conversation"
          },
          "discarded": {
            "type": "boolean",
            "nullable": true,
            "title": "Discarded",
            "description": "Whether this conversation has been discarded",
            "default": false
          },
          "deleted": {
            "type": "boolean",
            "nullable": true,
            "title": "Deleted",
            "description": "Whether this conversation has been deleted",
            "default": false
          },
          "app_id": {
            "type": "string",
            "nullable": true,
            "title": "App Id",
            "description": "ID of the app that created this conversation"
          },
          "geolocation": {
            "type": "object",
            "nullable": true,
            "title": "Geolocation",
            "description": "Geolocation data for this conversation"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "title": "Language",
            "description": "Language of the conversation"
          },
          "processing_memory_id": {
            "type": "string",
            "nullable": true,
            "title": "Processing Memory Id",
            "description": "ID of the processing memory related to this conversation"
          },
          "external_data": {
            "type": "object",
            "nullable": true,
            "title": "External Data",
            "description": "External data associated with this conversation"
          }
        },
        "title": "ConversationItem",
        "description": "Conversation item model for API responses"
      },
      "MemoriesResponse": {
        "type": "object",
        "required": [
          "memories"
        ],
        "properties": {
          "memories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemoryItem"
            },
            "description": "List of user memories (facts)"
          }
        },
        "title": "MemoriesResponse"
      },
      "MemoryItem": {
        "type": "object",
        "required": [
          "content",
          "id",
          "uid",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the memory"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the fact"
          },
          "category": {
            "$ref": "#/components/schemas/FactCategory",
            "description": "The category of the fact",
            "default": "other"
          },
          "visibility": {
            "type": "string",
            "title": "Visibility",
            "description": "Visibility setting of the memory",
            "default": "public"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "description": "Tags associated with the memory",
            "default": []
          },
          "uid": {
            "type": "string",
            "title": "Uid",
            "description": "User ID who owns this memory"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "When the memory was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "When the memory was last updated"
          },
          "memory_id": {
            "type": "string",
            "nullable": true,
            "title": "Memory Id",
            "description": "ID of the original memory this fact was extracted from"
          },
          "memory_category": {
            "$ref": "#/components/schemas/CategoryEnum",
            "nullable": true,
            "description": "Category of the original memory"
          },
          "reviewed": {
            "type": "boolean",
            "title": "Reviewed",
            "description": "Whether this memory has been reviewed",
            "default": false
          },
          "user_review": {
            "type": "boolean",
            "nullable": true,
            "title": "User Review",
            "description": "User's review status of this memory"
          },
          "manually_added": {
            "type": "boolean",
            "title": "Manually Added",
            "description": "Whether this memory was manually added",
            "default": false
          },
          "edited": {
            "type": "boolean",
            "title": "Edited",
            "description": "Whether this memory has been edited",
            "default": false
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted",
            "description": "Whether this memory has been deleted",
            "default": false
          },
          "scoring": {
            "type": "string",
            "nullable": true,
            "title": "Scoring",
            "description": "Internal scoring value for ranking"
          },
          "app_id": {
            "type": "string",
            "nullable": true,
            "title": "App Id",
            "description": "ID of the app that created this memory"
          }
        },
        "title": "MemoryItem",
        "description": "Memory item model that extends FactDB for API responses"
      },
      "FactCategory": {
        "type": "string",
        "enum": [
          "core",
          "hobbies",
          "lifestyle",
          "interests",
          "habits",
          "work",
          "skills",
          "learnings",
          "other"
        ],
        "title": "FactCategory"
      },
      "CategoryEnum": {
        "type": "string",
        "enum": [
          "personal",
          "education",
          "health",
          "finance",
          "legal",
          "philosophy",
          "spiritual",
          "science",
          "entrepreneurship",
          "parenting",
          "romantic",
          "travel",
          "inspiration",
          "technology",
          "business",
          "social",
          "work",
          "sports",
          "politics",
          "literature",
          "history",
          "architecture",
          "music",
          "weather",
          "news",
          "entertainment",
          "psychology",
          "real",
          "design",
          "family",
          "economics",
          "environment",
          "other"
        ],
        "title": "CategoryEnum"
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "title": "ValidationError"
      }
    }
  }
}
