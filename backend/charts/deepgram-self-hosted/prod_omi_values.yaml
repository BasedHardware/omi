# See the Chart [README](https://github.com/deepgram/self-hosted-resources/blob/main/charts/deepgram-self-hosted#values)
#   for documentation on all available options.

global:
  # pullSecretRef should refer to a K8s secret that
  # must be created prior to installing this Chart.
  # Consult the [official Kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/secret/) for best practices on configuring Secrets for use in your cluster.
  #
  # You can create a secret for your image pull credentials
  # with the following commands:
  # ```bash
  # docker login quay.io
  # kubectl create secret docker-registry dg-regcred \
  #   --docker-server=quay.io \
  #   --docker-username='QUAY_DG_USER' \
  #   --docker-password='QUAY_DG_PASSWORD'
  # ```
  pullSecretRef: "dg-regcred"

  # deepgramSecretRef should refer to a K8s secret that
  # must be created prior to installing this Chart.
  # Consult the [official Kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/secret/) for best practices on configuring Secrets for use in your cluster.
  #
  # You can create a secret for your Deepgram self-hosted API key
  # with the following command:
  # ```bash
  # kubectl create secret generic dg-self-hosted-api-key --from-literal=DEEPGRAM_API_KEY='<id>'
  # ```
  deepgramSecretRef: "dg-self-hosted-api-key"

scaling:
  # -- Number of replicas to set during initial installation.
  # @default -- ``
  replicas:
    api: 1
    engine: 1
  auto:
    # Can toggle to true to enable autoscaling. Make sure to set a value for one of the available metrics
    enabled: true

    api:
      metrics:
        # -- Scale the API deployment to this Engine-to-Api pod ratio
        engineToApiRatio: 1

    engine:
      # -- Minimum number of Engine replicas.
      minReplicas: 2
      # -- Maximum number of Engine replicas.
      maxReplicas: 10
      metrics:
        speechToText:
          batch:
            requestsPerPod: # Discuss a reasonable value with your Deepgram Account Representative
          streaming:
            requestsPerPod: 30
        textToSpeech:
          batch:
            requestsPerPod: # Discuss a reasonable value with your Deepgram Account Representative
        # Discuss a reasoanble value with your Deepgram Account Representative
        # Must also set engine.concurrencyLimit.activeRequests if using request ratio for autoscaling
        requestCapacityRatio:
      behavior:
        scaleUp:
          stabilizationWindowSeconds: 120  # Wait 2 minutes before scaling up

api:
  image:
    path: us-central1-docker.pkg.dev/based-hardware/deepgram/self-hosted-api
    tag: release-250130
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k8s.deepgram.com/node-type
                operator: In
                values:
                  - api
  ingress:
    annotations:
      kubernetes.io/ingress.class: "gce-internal"
      kubernetes.io/ingress.regional-static-ip-name: "prod-omi-deepgram-ilb-ip-address"
      kubernetes.io/ingress.allow-http: "false"
      ingress.gcp.kubernetes.io/pre-shared-cert: "prod-omi-deepgram-ilb-cert"
    hosts:
      - host: dg.omi.me
        paths:
          - path: /
            pathType: Prefix

  resources:
    requests:
      memory: "4Gi"
      cpu: "2000m"
    limits:
      memory: "12Gi"
      cpu: "4000m"

engine:
  image:
    path: us-central1-docker.pkg.dev/based-hardware/deepgram/self-hosted-engine
    tag: release-250130
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k8s.deepgram.com/node-type
                operator: In
                values:
                  - engine
  resources:
    requests:
      memory: "24Gi"
      cpu: "5000m"
      gpu: 1
    limits:
      memory: "40Gi"
      cpu: "12000m"
      gpu: 1
  # Discuss a reasonable value with your Deepgram Account Representative
  # If not using autoscaling, can be left empty, but must be set if using
  # autoscaling with scaling.auto.engine.metrics.requestCapacityRatio
  concurrencyLimit:
    activeRequests:
  modelManager:
    volumes:
      gcp:
        gpd:
          enabled: true
          # Replace with your Google disk handle
          volumeHandle: "projects/based-hardware/zones/us-central1-a/disks/prod-omi-deepgram-model-storage"

licenseProxy:
  enabled: true
  image:
    path: us-central1-docker.pkg.dev/based-hardware/deepgram/self-hosted-license-proxy
    tag: release-250130
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k8s.deepgram.com/node-type
                operator: In
                values:
                  - license-proxy
  resources:
    requests:
      memory: "4Gi"
      cpu: "1000m"
    limits:
      memory: "8Gi"
      cpu: "2000m"

gpu-operator:
  # GKE will manage the driver and toolkit installation for us by default.
  enabled: false

kube-prometheus-stack:
  grafana:
    enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "gce"
        kubernetes.io/ingress.global-static-ip-name: "prod-omi-deepgram-grafana-alb-ip-address"
        networking.gke.io/managed-certificates: "prod-omi-deepgram-grafana-alb-cert"
        kubernetes.io/ingress.allow-http: "false"
      hosts:
        - dg-monitor.omi.me
      path: /
    persistence:
      enabled: true
      type: sts
      storageClassName: standard-rwo
      accessModes:
        - ReadWriteOnce
      size: 20Gi
      finalizers:
        - kubernetes.io/pvc-protection
