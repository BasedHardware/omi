apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.engine.namePrefix }}-config
  labels:
{{ include "deepgram-self-hosted.labels" . | indent 4}}
    {{- range $key, $val := .Values.engine.additionalLabels }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
data:
  engine.toml: |
    {{- if .Values.engine.concurrencyLimit.activeRequests }}
    max_active_requests = {{ .Values.engine.concurrencyLimit.activeRequests }}
    {{- end }}

    [license]
      server_url = [
        {{- if .Values.licenseProxy.enabled }}
        "https://{{ .Values.licenseProxy.namePrefix }}-internal:{{ .Values.licenseProxy.server.port}}{{ .Values.licenseProxy.server.baseUrl }}"
        {{- end }}
        {{- if or (not .Values.licenseProxy.enabled) .Values.licenseProxy.keepUpstreamServerAsBackup }}
        {{- if .Values.licenseProxy.enabled -}},{{- end -}}"https://license.deepgram.com"
        {{- end }}
      ]

    [server]
      host = "{{ .Values.engine.server.host }}"
      port = {{ .Values.engine.server.port }}

    [metrics_server]
      host = "{{ .Values.engine.metricsServer.host }}"
      port = {{ .Values.engine.metricsServer.port }}

    [model_manager]
      search_paths = [
        "/models
        {{- if .Values.engine.modelManager.volumes.customVolumeClaim.enabled -}}
          {{- if not (regexMatch `^\/` .Values.engine.modelManager.volumes.customVolumeClaim.modelsDirectory) -}}
          /
          {{- end -}}
        {{- .Values.engine.modelManager.volumes.customVolumeClaim.modelsDirectory -}}
        {{- end -}}"
      ]

    [features]
      multichannel = true
      language_detection = true

    [chunking.batch]
      {{- if .Values.engine.chunking.speechToText.batch.minDuration }}
      min_duration = {{ .Values.engine.chunking.speechToText.batch.minDuration }}
      {{- end }}
      {{- if .Values.engine.chunking.speechToText.batch.maxDuration }}
      max_duration = {{ .Values.engine.chunking.speechToText.batch.maxDuration }}
      {{- end }}

    [chunking.streaming]
      {{- if .Values.engine.chunking.speechToText.streaming.minDuration }}
      min_duration = {{ .Values.engine.chunking.speechToText.streaming.minDuration }}
      {{- end }}
      {{- if .Values.engine.chunking.speechToText.streaming.maxDuration }}
      max_duration = {{ .Values.engine.chunking.speechToText.streaming.maxDuration }}
      {{- end }}
      step = {{ .Values.engine.chunking.speechToText.streaming.step }}

    [half_precision]
      state = "{{ .Values.engine.halfPrecision.state }}"

