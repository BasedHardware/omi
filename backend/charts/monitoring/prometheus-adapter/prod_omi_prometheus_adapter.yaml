prometheus:
  url: http://prod-omi-kube-prometheus-s-prometheus.{{ .Release.Namespace }}.svc
rules:
  default: false
  external:
    - name:
        as: "backend_listen_response_code_500"
      seriesQuery: 'stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_backend_request_count{backend_target_name="custom-domains-api-omi-me-backend-listen-49a4-be"}'
      metricsQuery: 'avg(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_backend_request_count{response_code="500", backend_target_name="custom-domains-api-omi-me-backend-listen-49a4-be"}) or vector(0)'
      resources:
        overrides:
          namespace: { resource: "namespace" }
    - name:
        as: "backend_listen_requests_per_pod"
      seriesQuery: 'stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_backend_request_count{backend_target_name="custom-domains-api-omi-me-backend-listen-49a4-be"}'
      metricsQuery: 'avg_over_time((sum(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_backend_request_count{backend_target_name="custom-domains-api-omi-me-backend-listen-49a4-be"})/sum(kube_deployment_status_replicas{deployment="prod-omi-backend-listen"}))[5m:])'
      resources:
        overrides:
          namespace: { resource: "namespace" }
    - name:
        as: "engine_active_requests_stt_streaming"
      seriesQuery: 'engine_active_requests{kind="stream"}'
      metricsQuery: 'avg(engine_active_requests{kind="stream"})'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
          service: { resource: "service" }
    - name:
        as: "engine_active_requests_stt_batch"
      seriesQuery: 'engine_active_requests{kind="batch"}'
      metricsQuery: 'avg(engine_active_requests{kind="batch"})'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
          service: { resource: "service" }
    - name:
        as: "engine_active_requests_tts_batch"
      seriesQuery: 'engine_active_requests{kind="tts"}'
      metricsQuery: 'avg(engine_active_requests{kind="tts"})'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
          service: { resource: "service" }
    - name:
        as: "engine_estimated_stream_capacity"
      seriesQuery: 'engine_active_requests{kind="stream"}'
      metricsQuery: 'avg_over_time((sum(engine_active_requests{kind="stream"}) / sum(engine_estimated_stream_capacity))[1m:1m])'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
          service: { resource: "service" }
    - name:
        as: "engine_requests_active_to_max_ratio"
      seriesQuery: "engine_max_active_requests"
      metricsQuery: "avg_over_time((sum(engine_active_requests) / sum(engine_max_active_requests))[1m:1m])"
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
          service: { resource: "service" }
    - name:
        as: "engine_to_api_pod_ratio"
      seriesQuery: 'kube_deployment_labels{label_app="deepgram-engine"}'
      metricsQuery: '(sum(kube_deployment_status_replicas and on(deployment) kube_deployment_labels{label_app="deepgram-engine"})) / (sum(kube_deployment_status_replicas and on(deployment) kube_deployment_labels{label_app="deepgram-api"}))'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
    # Average GPU utilization (%) for autoscaling
    - name:
        as: "engine_avg_gpu_utilization"
      seriesQuery: 'DCGM_FI_DEV_GPU_UTIL{container="deepgram-engine"}'
      metricsQuery: 'avg(avg_over_time(DCGM_FI_DEV_GPU_UTIL{container="deepgram-engine"}[1m]))'
      resources:
        overrides:
          namespace: { resource: "namespace" }
          pod: { resource: "pod" }
extraArguments:
  - --metrics-max-age=5m