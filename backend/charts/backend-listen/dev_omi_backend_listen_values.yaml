# Default values for backend-listen.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: gcr.io/based-hardware-dev/backend
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  annotations:
    cloud.google.com/neg: '{"exposed_ports": {"8080":{"name": "dev-backend-listen-neg"}}}'

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env:
  - name: DEEPGRAM_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: DEEPGRAM_API_KEY
  - name: FAL_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: FAL_KEY
  - name: OPENAI_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: OPENAI_API_KEY
  - name: GOOGLE_MAPS_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: GOOGLE_MAPS_API_KEY
  - name: GITHUB_TOKEN
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: GITHUB_TOKEN
  - name: SONIOX_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: SONIOX_API_KEY
  - name: BUCKET_SPEECH_PROFILES
    value: "speech-profiles-dev"
  - name: BUCKET_TEMPORAL_SYNC_LOCAL
    value: "syncing-local-development"
  - name: HOSTED_VAD_API_URL
    value: "http://34.172.155.20:80/v1/vad"
  - name: HOSTED_SPEECH_PROFILE_API_URL
    value: "http://34.172.155.20:80/v1/speaker-identification"
  - name: PINECONE_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: PINECONE_API_KEY
  - name: PINECONE_INDEX_NAME
    value: "memories-backend-dev"
  - name: REDIS_DB_HOST
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: REDIS_DB_HOST
  - name: REDIS_DB_PORT
    value: "10797"
  - name: REDIS_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: REDIS_DB_PASSWORD
  - name: ADMIN_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: ADMIN_KEY
  - name: WORKFLOW_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: WORKFLOW_API_KEY
  - name: NO_SOCKET_TIMEOUT
    value: "true"
  - name: HOSTED_PUSHER_API_URL
    value: "http://internal-alb.pusher-ep-dev.il7.us-central1.lb.based-hardware-dev.internal"
  - name: BUCKET_PLUGINS_LOGOS
    value: "plugin_resources"
  - name: GOOGLE_APPLICATION_CREDENTIALS
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: GOOGLE_APPLICATION_CREDENTIALS
  - name: DD_SERVICE
    value: "backend-listen"
  - name: DD_ENV
    value: "dev"
  - name: DD_TRACE_SAMPLE_RATE
    value: "1"
  - name: DD_SITE
    value: "us5.datadoghq.com"
  - name: DD_TRACE_PROPAGATION_STYLE
    value: "datadog"
  - name: DD_TRACE_ENABLED
    value: "false"
  - name: DD_VERSION
    value: "1"
  - name: DD_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: DD_API_KEY
  - name: LANGCHAIN_TRACING_V2
    value: "false"
  - name: LANGCHAIN_ENDPOINT
    value: "https://api.smith.langchain.com"
  - name: LANGCHAIN_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: LANGCHAIN_API_KEY
  - name: LANGCHAIN_PROJECT
    value: "development"
  - name: DD_LOGS_ENABLED
    value: "false"
  - name: STRIPE_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: STRIPE_API_KEY
  - name: STRIPE_WEBHOOK_SECRET
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: STRIPE_WEBHOOK_SECRET
  - name: MARKETPLACE_APP_REVIEWERS
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: MARKETPLACE_APP_REVIEWERS
  - name: TYPESENSE_HOST
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: TYPESENSE_HOST
  - name: TYPESENSE_HOST_PORT
    value: "443"
  - name: TYPESENSE_API_KEY
    valueFrom:
      secretKeyRef:
        name: dev-omi-backend-secrets
        key: TYPESENSE_API_KEY
  - name: DEEPGRAM_SELF_HOSTED_ENABLED
    value: "true"
  - name: DEEPGRAM_SELF_HOSTED_URL
    value: "https://dg.omiapi.com"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 1
    memory: 4Gi
  limits:
    cpu: 2
    memory: 6Gi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  tcpSocket:
    port: 8080
  failureThreshold: 30
  periodSeconds: 10

readinessProbe:
  tcpSocket:
    port: 8080
  failureThreshold: 30
  periodSeconds: 10

startupProbe:
  tcpSocket:
    port: 8080
  failureThreshold: 30
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: service
              operator: In
              values:
                - backend-listen
            - key: env
              operator: In
              values:
                - dev
