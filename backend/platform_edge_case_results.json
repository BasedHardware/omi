{
  "oauth_redirects": [
    {
      "platform": "iOS Safari",
      "success": true,
      "issues": []
    },
    {
      "platform": "iOS App",
      "success": true,
      "issues": [
        "Need custom URL scheme handling in iOS app"
      ]
    },
    {
      "platform": "Android Chrome",
      "success": true,
      "issues": []
    },
    {
      "platform": "Android App",
      "success": true,
      "issues": [
        "Need intent-filter configuration for custom scheme"
      ]
    },
    {
      "platform": "Windows Desktop",
      "success": true,
      "issues": []
    },
    {
      "platform": "macOS Desktop",
      "success": true,
      "issues": []
    }
  ],
  "token_storage": {
    "iOS": {
      "method": "iOS Keychain",
      "encryption": true,
      "biometric": true,
      "considerations": [
        "App uninstall clears keychain",
        "iCloud keychain sync"
      ]
    },
    "Android": {
      "method": "Android Keystore",
      "encryption": true,
      "biometric": true,
      "considerations": [
        "Hardware-backed security",
        "Account manager integration"
      ]
    },
    "Windows": {
      "method": "Windows Credential Manager",
      "encryption": true,
      "biometric": false,
      "considerations": [
        "User profile specific",
        "Admin access concerns"
      ]
    },
    "macOS": {
      "method": "macOS Keychain",
      "encryption": true,
      "biometric": true,
      "considerations": [
        "Keychain Access app visibility",
        "Admin authentication"
      ]
    }
  },
  "network_edge_cases": [
    {
      "scenario": "Poor cellular connection",
      "timeout": 30,
      "retry_strategy": "exponential_backoff",
      "platforms": [
        "iOS",
        "Android"
      ]
    },
    {
      "scenario": "Corporate firewall",
      "timeout": 10,
      "retry_strategy": "immediate_fail",
      "platforms": [
        "Windows",
        "macOS"
      ]
    },
    {
      "scenario": "Airplane mode during OAuth",
      "timeout": 5,
      "retry_strategy": "queue_for_later",
      "platforms": [
        "iOS",
        "Android"
      ]
    },
    {
      "scenario": "WiFi captive portal",
      "timeout": 15,
      "retry_strategy": "user_notification",
      "platforms": [
        "iOS",
        "Android",
        "Windows",
        "macOS"
      ]
    },
    {
      "scenario": "VPN interference",
      "timeout": 20,
      "retry_strategy": "fallback_endpoint",
      "platforms": [
        "Windows",
        "macOS"
      ]
    }
  ],
  "background_refresh": {
    "iOS": {
      "background_app_refresh": true,
      "token_refresh_timing": "before_expiry",
      "considerations": [
        "Background App Refresh can be disabled by user",
        "iOS may kill app in low memory situations",
        "Silent push notifications for token refresh"
      ]
    },
    "Android": {
      "background_app_refresh": true,
      "token_refresh_timing": "scheduled_job",
      "considerations": [
        "Doze mode and App Standby restrictions",
        "Battery optimization settings",
        "WorkManager for reliable background tasks"
      ]
    },
    "Windows": {
      "background_app_refresh": true,
      "token_refresh_timing": "service_worker",
      "considerations": [
        "Windows service for persistent operation",
        "User account control permissions",
        "System startup registration"
      ]
    },
    "macOS": {
      "background_app_refresh": true,
      "token_refresh_timing": "app_nap_aware",
      "considerations": [
        "App Nap feature may suspend app",
        "Login items for auto-start",
        "Notification permissions for updates"
      ]
    }
  },
  "oauth_interruptions": [
    {
      "scenario": "User cancels OAuth in browser",
      "handling": "return_to_app_with_error",
      "user_action": "show_retry_option"
    },
    {
      "scenario": "Browser crashes during OAuth",
      "handling": "detect_timeout_restart_flow",
      "user_action": "clear_state_restart"
    },
    {
      "scenario": "App backgrounded during OAuth",
      "handling": "preserve_state_resume",
      "user_action": "continue_where_left_off"
    },
    {
      "scenario": "Network loss during redirect",
      "handling": "cache_auth_code_retry",
      "user_action": "automatic_retry"
    },
    {
      "scenario": "Invalid OAuth response",
      "handling": "validate_response_error",
      "user_action": "show_detailed_error"
    }
  ],
  "rate_limits": [
    {
      "scenario": "Burst event creation",
      "api_calls": 100,
      "time_window": 60,
      "expected_behavior": "exponential_backoff"
    },
    {
      "scenario": "Concurrent user requests",
      "api_calls": 1000,
      "time_window": 3600,
      "expected_behavior": "queue_requests"
    },
    {
      "scenario": "Single user heavy usage",
      "api_calls": 10000,
      "time_window": 86400,
      "expected_behavior": "temporary_limit"
    }
  ],
  "timezone_edge_cases": [
    {
      "scenario": "Daylight Saving Time transition",
      "timezone": "America/New_York",
      "test_date": "2024-03-10T02:30:00",
      "expected_issues": [
        "Non-existent time",
        "Ambiguous time"
      ]
    },
    {
      "scenario": "User travels across timezones",
      "from_tz": "America/Los_Angeles",
      "to_tz": "Asia/Tokyo",
      "considerations": [
        "Event time interpretation",
        "Calendar display"
      ]
    },
    {
      "scenario": "UTC vs local time confusion",
      "server_tz": "UTC",
      "client_tz": "Europe/London",
      "considerations": [
        "API timestamp format",
        "Display conversion"
      ]
    },
    {
      "scenario": "Invalid timezone identifier",
      "timezone": "Invalid/Timezone",
      "fallback": "UTC",
      "handling": "graceful_degradation"
    }
  ],
  "device_limitations": {
    "iOS": {
      "memory_pressure": "High - iOS aggressively manages memory",
      "background_execution": "Limited - 30 seconds for most tasks",
      "network_restrictions": "ATS requirements for HTTPS",
      "oauth_considerations": [
        "SFSafariViewController recommended over WKWebView",
        "Custom URL schemes must be registered",
        "Universal Links preferred for production"
      ]
    },
    "Android": {
      "memory_pressure": "Variable - depends on device and Android version",
      "background_execution": "Restricted - Doze mode and background limits",
      "network_restrictions": "Network Security Config affects HTTP",
      "oauth_considerations": [
        "Custom Tabs preferred over WebView",
        "Intent filters needed for custom schemes",
        "App Links verification for production"
      ]
    },
    "Windows": {
      "memory_pressure": "Low - Desktop has more available memory",
      "background_execution": "Good - Services can run continuously",
      "network_restrictions": "Firewall and proxy considerations",
      "oauth_considerations": [
        "Embedded browser or system default",
        "Localhost redirects work well",
        "Certificate validation important"
      ]
    },
    "macOS": {
      "memory_pressure": "Low - Desktop has more available memory",
      "background_execution": "Good - App Nap may affect inactive apps",
      "network_restrictions": "Gatekeeper and security preferences",
      "oauth_considerations": [
        "WKWebView or system browser options",
        "Localhost redirects supported",
        "Notarization required for distribution"
      ]
    }
  },
  "recommendations": {
    "iOS": [
      "Use SFSafariViewController for OAuth instead of WKWebView",
      "Implement Universal Links for production redirect URIs",
      "Store tokens in iOS Keychain with biometric protection",
      "Use Background App Refresh API for token refresh",
      "Handle app state transitions gracefully",
      "Implement retry logic for network requests",
      "Use NSURLSession with proper timeout configurations"
    ],
    "Android": [
      "Use Chrome Custom Tabs for OAuth flow",
      "Implement App Links verification for redirect URIs",
      "Store tokens in Android Keystore with encryption",
      "Use WorkManager for background token refresh",
      "Handle Doze mode and App Standby restrictions",
      "Implement exponential backoff for API calls",
      "Use OkHttp with connection pooling"
    ],
    "Windows": [
      "Use embedded WebView2 or system default browser",
      "Store tokens in Windows Credential Manager",
      "Implement Windows Service for background operations",
      "Handle Windows Firewall and proxy settings",
      "Use Windows Toast notifications for status updates",
      "Implement certificate pinning for security",
      "Use HttpClient with proper disposal patterns"
    ],
    "macOS": [
      "Use WKWebView with proper security configuration",
      "Store tokens in macOS Keychain with encryption",
      "Handle App Nap for background operations",
      "Implement proper sandbox permissions",
      "Use NSUserNotification for status updates",
      "Handle macOS security and privacy settings",
      "Use URLSession with delegate callbacks"
    ]
  }
}