// Mocks generated by Mockito 5.4.4 from annotations
// in friend_private/test/services/notifications_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:awesome_notifications/awesome_notifications.dart' as _i3;
import 'package:flutter/services.dart' as _i2;
import 'package:friend_private/backend/schema/message.dart' as _i6;
import 'package:friend_private/services/notifications.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMethodChannel_0 extends _i1.SmartFake implements _i2.MethodChannel {
  _FakeMethodChannel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationChannel_1 extends _i1.SmartFake
    implements _i3.NotificationChannel {
  _FakeNotificationChannel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationService extends _i1.Mock
    implements _i4.NotificationService {
  MockNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MethodChannel get platform => (super.noSuchMethod(
        Invocation.getter(#platform),
        returnValue: _FakeMethodChannel_0(
          this,
          Invocation.getter(#platform),
        ),
      ) as _i2.MethodChannel);

  @override
  set platform(_i2.MethodChannel? _platform) => super.noSuchMethod(
        Invocation.setter(
          #platform,
          _platform,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.NotificationChannel get channel => (super.noSuchMethod(
        Invocation.getter(#channel),
        returnValue: _FakeNotificationChannel_1(
          this,
          Invocation.getter(#channel),
        ),
      ) as _i3.NotificationChannel);

  @override
  _i5.Stream<_i6.ServerMessage> get listenForServerMessages =>
      (super.noSuchMethod(
        Invocation.getter(#listenForServerMessages),
        returnValue: _i5.Stream<_i6.ServerMessage>.empty(),
      ) as _i5.Stream<_i6.ServerMessage>);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void showNotification({
    required int? id,
    required String? title,
    required String? body,
    Map<String, String?>? payload,
    bool? wakeUpScreen = false,
    _i3.NotificationSchedule? schedule,
    _i3.NotificationLayout? layout = _i3.NotificationLayout.Default,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showNotification,
          [],
          {
            #id: id,
            #title: title,
            #body: body,
            #payload: payload,
            #wakeUpScreen: wakeUpScreen,
            #schedule: schedule,
            #layout: layout,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> requestNotificationPermissions() => (super.noSuchMethod(
        Invocation.method(
          #requestNotificationPermissions,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> register() => (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> getTimeZone() => (super.noSuchMethod(
        Invocation.method(
          #getTimeZone,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #getTimeZone,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<void> saveFcmToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveFcmToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void saveNotificationToken() => super.noSuchMethod(
        Invocation.method(
          #saveNotificationToken,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> hasNotificationPermissions() => (super.noSuchMethod(
        Invocation.method(
          #hasNotificationPermissions,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> createNotification({
    String? title = r'',
    String? body = r'',
    int? notificationId = 1,
    Map<String, String?>? payload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNotification,
          [],
          {
            #title: title,
            #body: body,
            #notificationId: notificationId,
            #payload: payload,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  dynamic clearNotification(int? id) => super.noSuchMethod(Invocation.method(
        #clearNotification,
        [id],
      ));

  @override
  _i5.Future<void> onNotificationTap() => (super.noSuchMethod(
        Invocation.method(
          #onNotificationTap,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> listenForMessages() => (super.noSuchMethod(
        Invocation.method(
          #listenForMessages,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
