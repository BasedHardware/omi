// Mocks generated by Mockito 5.4.4 from annotations
// in friend_private/test/providers/capture_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i13;

import 'package:friend_private/backend/schema/bt_device/bt_device.dart' as _i10;
import 'package:friend_private/backend/schema/message_event.dart' as _i11;
import 'package:friend_private/backend/schema/transcript_segment.dart' as _i6;
import 'package:friend_private/providers/capture_provider.dart' as _i3;
import 'package:friend_private/providers/memory_provider.dart' as _i4;
import 'package:friend_private/providers/message_provider.dart' as _i5;
import 'package:friend_private/services/sockets/sdcard_socket.dart' as _i2;
import 'package:friend_private/utils/enums.dart' as _i7;
import 'package:internet_connection_checker_plus/internet_connection_checker_plus.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSdCardSocketService_0 extends _i1.SmartFake
    implements _i2.SdCardSocketService {
  _FakeSdCardSocketService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CaptureProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCaptureProvider extends _i1.Mock implements _i3.CaptureProvider {
  MockCaptureProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set memoryProvider(_i4.MemoryProvider? _memoryProvider) => super.noSuchMethod(
        Invocation.setter(
          #memoryProvider,
          _memoryProvider,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set messageProvider(_i5.MessageProvider? _messageProvider) =>
      super.noSuchMethod(
        Invocation.setter(
          #messageProvider,
          _messageProvider,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SdCardSocketService get sdCardSocket => (super.noSuchMethod(
        Invocation.getter(#sdCardSocket),
        returnValue: _FakeSdCardSocketService_0(
          this,
          Invocation.getter(#sdCardSocket),
        ),
      ) as _i2.SdCardSocketService);

  @override
  set sdCardSocket(_i2.SdCardSocketService? _sdCardSocket) =>
      super.noSuchMethod(
        Invocation.setter(
          #sdCardSocket,
          _sdCardSocket,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i6.TranscriptSegment> get segments => (super.noSuchMethod(
        Invocation.getter(#segments),
        returnValue: <_i6.TranscriptSegment>[],
      ) as List<_i6.TranscriptSegment>);

  @override
  set segments(List<_i6.TranscriptSegment>? _segments) => super.noSuchMethod(
        Invocation.setter(
          #segments,
          _segments,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasTranscripts => (super.noSuchMethod(
        Invocation.getter(#hasTranscripts),
        returnValue: false,
      ) as bool);

  @override
  set hasTranscripts(bool? _hasTranscripts) => super.noSuchMethod(
        Invocation.setter(
          #hasTranscripts,
          _hasTranscripts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.RecordingState get recordingState => (super.noSuchMethod(
        Invocation.getter(#recordingState),
        returnValue: _i7.RecordingState.pause,
      ) as _i7.RecordingState);

  @override
  set recordingState(_i7.RecordingState? _recordingState) => super.noSuchMethod(
        Invocation.setter(
          #recordingState,
          _recordingState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get conversationId => (super.noSuchMethod(
        Invocation.getter(#conversationId),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#conversationId),
        ),
      ) as String);

  @override
  set conversationId(String? _conversationId) => super.noSuchMethod(
        Invocation.setter(
          #conversationId,
          _conversationId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<int> get currentStorageFiles => (super.noSuchMethod(
        Invocation.getter(#currentStorageFiles),
        returnValue: <int>[],
      ) as List<int>);

  @override
  set currentStorageFiles(List<int>? _currentStorageFiles) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentStorageFiles,
          _currentStorageFiles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get sdCardFileNum => (super.noSuchMethod(
        Invocation.getter(#sdCardFileNum),
        returnValue: 0,
      ) as int);

  @override
  set sdCardFileNum(int? _sdCardFileNum) => super.noSuchMethod(
        Invocation.setter(
          #sdCardFileNum,
          _sdCardFileNum,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get currentTotalBytesReceived => (super.noSuchMethod(
        Invocation.getter(#currentTotalBytesReceived),
        returnValue: 0,
      ) as int);

  @override
  set currentTotalBytesReceived(int? _currentTotalBytesReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentTotalBytesReceived,
          _currentTotalBytesReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get currentSdCardSecondsReceived => (super.noSuchMethod(
        Invocation.getter(#currentSdCardSecondsReceived),
        returnValue: 0.0,
      ) as double);

  @override
  set currentSdCardSecondsReceived(double? _currentSdCardSecondsReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentSdCardSecondsReceived,
          _currentSdCardSecondsReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get totalStorageFileBytes => (super.noSuchMethod(
        Invocation.getter(#totalStorageFileBytes),
        returnValue: 0,
      ) as int);

  @override
  set totalStorageFileBytes(int? _totalStorageFileBytes) => super.noSuchMethod(
        Invocation.setter(
          #totalStorageFileBytes,
          _totalStorageFileBytes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get totalBytesReceived => (super.noSuchMethod(
        Invocation.getter(#totalBytesReceived),
        returnValue: 0,
      ) as int);

  @override
  set totalBytesReceived(int? _totalBytesReceived) => super.noSuchMethod(
        Invocation.setter(
          #totalBytesReceived,
          _totalBytesReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get sdCardSecondsTotal => (super.noSuchMethod(
        Invocation.getter(#sdCardSecondsTotal),
        returnValue: 0.0,
      ) as double);

  @override
  set sdCardSecondsTotal(double? _sdCardSecondsTotal) => super.noSuchMethod(
        Invocation.setter(
          #sdCardSecondsTotal,
          _sdCardSecondsTotal,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get sdCardSecondsReceived => (super.noSuchMethod(
        Invocation.getter(#sdCardSecondsReceived),
        returnValue: 0.0,
      ) as double);

  @override
  set sdCardSecondsReceived(double? _sdCardSecondsReceived) =>
      super.noSuchMethod(
        Invocation.setter(
          #sdCardSecondsReceived,
          _sdCardSecondsReceived,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sdCardDownloadDone => (super.noSuchMethod(
        Invocation.getter(#sdCardDownloadDone),
        returnValue: false,
      ) as bool);

  @override
  set sdCardDownloadDone(bool? _sdCardDownloadDone) => super.noSuchMethod(
        Invocation.setter(
          #sdCardDownloadDone,
          _sdCardDownloadDone,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sdCardReady => (super.noSuchMethod(
        Invocation.getter(#sdCardReady),
        returnValue: false,
      ) as bool);

  @override
  set sdCardReady(bool? _sdCardReady) => super.noSuchMethod(
        Invocation.setter(
          #sdCardReady,
          _sdCardReady,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get sdCardIsDownloading => (super.noSuchMethod(
        Invocation.getter(#sdCardIsDownloading),
        returnValue: false,
      ) as bool);

  @override
  set sdCardIsDownloading(bool? _sdCardIsDownloading) => super.noSuchMethod(
        Invocation.setter(
          #sdCardIsDownloading,
          _sdCardIsDownloading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get btConnectedTime => (super.noSuchMethod(
        Invocation.getter(#btConnectedTime),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#btConnectedTime),
        ),
      ) as String);

  @override
  set btConnectedTime(String? _btConnectedTime) => super.noSuchMethod(
        Invocation.setter(
          #btConnectedTime,
          _btConnectedTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sdCardReconnectionTimer(_i9.Timer? _sdCardReconnectionTimer) =>
      super.noSuchMethod(
        Invocation.setter(
          #sdCardReconnectionTimer,
          _sdCardReconnectionTimer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isWalSupported => (super.noSuchMethod(
        Invocation.getter(#isWalSupported),
        returnValue: false,
      ) as bool);

  @override
  bool get transcriptServiceReady => (super.noSuchMethod(
        Invocation.getter(#transcriptServiceReady),
        returnValue: false,
      ) as bool);

  @override
  bool get recordingDeviceServiceReady => (super.noSuchMethod(
        Invocation.getter(#recordingDeviceServiceReady),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void updateProviderInstances(
    _i4.MemoryProvider? mp,
    _i5.MessageProvider? p,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateProviderInstances,
          [
            mp,
            p,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setHasTranscripts(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setHasTranscripts,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMemoryCreating(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setMemoryCreating,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateRecordingDevice(_i10.BtDevice? device) => super.noSuchMethod(
        Invocation.method(
          #updateRecordingDevice,
          [device],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> onRecordProfileSettingChanged() => (super.noSuchMethod(
        Invocation.method(
          #onRecordProfileSettingChanged,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> changeAudioRecordProfile([
    _i10.BleAudioCodec? audioCodec,
    int? sampleRate,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeAudioRecordProfile,
          [
            audioCodec,
            sampleRate,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<dynamic> streamAudioToWs(
    String? id,
    _i10.BleAudioCodec? codec,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamAudioToWs,
          [
            id,
            codec,
          ],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  void clearTranscripts() => super.noSuchMethod(
        Invocation.method(
          #clearTranscripts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void closeBleStream() => super.noSuchMethod(
        Invocation.method(
          #closeBleStream,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelMemoryCreationTimer() => super.noSuchMethod(
        Invocation.method(
          #cancelMemoryCreationTimer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateRecordingState(_i7.RecordingState? state) => super.noSuchMethod(
        Invocation.method(
          #updateRecordingState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<dynamic> streamDeviceRecording({_i10.BtDevice? device}) =>
      (super.noSuchMethod(
        Invocation.method(
          #streamDeviceRecording,
          [],
          {#device: device},
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  _i9.Future<dynamic> stopStreamDeviceRecording({bool? cleanDevice = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #stopStreamDeviceRecording,
          [],
          {#cleanDevice: cleanDevice},
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  void onClosed() => super.noSuchMethod(
        Invocation.method(
          #onClosed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(Object? err) => super.noSuchMethod(
        Invocation.method(
          #onError,
          [err],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onConnected() => super.noSuchMethod(
        Invocation.method(
          #onConnected,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onMessageEventReceived(_i11.ServerMessageEvent? event) =>
      super.noSuchMethod(
        Invocation.method(
          #onMessageEventReceived,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> forceProcessingCurrentMemory() => (super.noSuchMethod(
        Invocation.method(
          #forceProcessingCurrentMemory,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void onSegmentReceived(List<_i6.TranscriptSegment>? newSegments) =>
      super.noSuchMethod(
        Invocation.method(
          #onSegmentReceived,
          [newSegments],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInternetSatusChanged(_i12.InternetStatus? status) =>
      super.noSuchMethod(
        Invocation.method(
          #onInternetSatusChanged,
          [status],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIsWalSupported(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setIsWalSupported,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSdCardIsDownloading(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setSdCardIsDownloading,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> updateStorageList() => (super.noSuchMethod(
        Invocation.method(
          #updateStorageList,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> initiateStorageBytesStreaming() => (super.noSuchMethod(
        Invocation.method(
          #initiateStorageBytesStreaming,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<dynamic> sendStorage(String? id) => (super.noSuchMethod(
        Invocation.method(
          #sendStorage,
          [id],
        ),
        returnValue: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  void addListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i13.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #notifyError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyInfo(String? info) => super.noSuchMethod(
        Invocation.method(
          #notifyInfo,
          [info],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearInfo() => super.noSuchMethod(
        Invocation.method(
          #clearInfo,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
